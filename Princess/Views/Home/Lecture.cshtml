@model Princess.Models.AttendanceView

@using Princess.Services
@using Microsoft.AspNetCore.Mvc.TagHelpers

@inject PresenceHandler _presenceHandler
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Lecture";
    ViewData["Header-title"] = "Pr3s3nc3 Overview";

    int lectureId = Model.lectureId.Value;

    Lecture lecture = await _presenceHandler.GetLectureAsync(lectureId);

    //List<Presence> presenceList = await _presenceHandler.GetPresencesAsync(Model);

    var presenceList = lecture.Presences;
}
<br>
<div class="d-flex ms-auto">
    <button class="btn btn-dark ms-auto mb-2 mb-lg-0">Export to Excel file</button>
    <a asp-controller="Home" asp-action="Index">Home</a>
</div>

<form asp-action="Lecture" asp-controller="Home" method="post">
    <table class="table header-table">
        <thead>
        <tr>
            <th class="tdSize" scope="col">Class</th>
            <th class="tdSize" scope="col">Teacher</th>
            <th class="tdSize" scope="col">Date | Time</th>
            <th class="tdSize" scope="col">Student</th>
            <th class="tdSize" scope="col">Present</th>
            <th class="tdSize" scope="col">Comment</th>
        </tr>
        </thead>
    </table>
    @foreach (var student in lecture.Students)
    {
        var presence = presenceList.FirstOrDefault(p => p.Student == student);

        <table class="table bg-table ctx-table">
            <tbody> 
            <tr> 
                <td class="tdSize" scope="row">@lecture.Class.Name</td>
                <td class="tdSize">@lecture.Teacher.Name</td>
                <td class="tdSize">@lecture.Date.ToShortDateString(), @lecture.Date.ToShortTimeString()</td>
                <td class="tdSize">@student.Name</td>
                <td class="tdSize">@Html.CheckBoxFor(x => @presence.Attended, new {@disabled = "disabled"})</td>
                <td class="tdSize">@presence.ReasonAbsence</td>
            </tr>
            </tbody>
        </table>
    }
    <ul class="pagination">
        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <li class="page-item">
                @if (i != Model.CurrentPageIndex)
                {
                    <a class="page-link" href="javascript:PagerClick(@i);">@i</a>
                }
                else
                {
                    <a class="page-link">@i</a>
                }
            </li>
        }
    </ul>
    <input type="hidden" asp-for="@Model.lectureId" name="lectureId"/>
    <input type="hidden" id="hfCurrentPageIndex" name="currentPageIndex"/>
</form>

<script type="text/javascript">
    function PagerClick(index) { 
        document.getElementById("hfCurrentPageIndex").value = index;
        document.forms[0].submit();
        document.forms[1].submit();
    }
</script>





